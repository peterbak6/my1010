{"version":3,"sources":["style.js","widgets/Stones.js","widgets/Board.js","widgets/utils.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","overflow","header","display","flexDirection","justifyContent","alignItems","textAlign","fontFamily","color","padding","backgroundColor","points","h2","margin","fontSize","h3","board","width","refresh","cursor","Stones","stone","weight","type","weightedSample","arr","wgh","w","reduce","a","e","r","Math","random","find","i","generateStones","N","stn","d3","map","length","s","draw","div","config","handleGameChange","p","floor","getBoundingClientRect","grid","size","col","range","colors","c","x","y","free","stones","drawnStones","stoneCodes","currentStoneNrs","currentStoneStartpost","stonesLayed","movingStone","removeCell","cell","transition","duration","attr","remove","snapToGrid","pos","max","min","checkPositionFree","codes","flag","forEach","t","moveStone","drawnPiecePos","drawStonePieces","index","pieces","stoneWidth","stoneHeight","stonePosY","stonePosX","gPieces","svg","append","piece","style","push","call","drag","drawStone","I","shift","on","event","n","this","offset","node","indexOf","stnCode","check","m","val","setPosition","splice","fullRow","fullColumn","cRow","every","cCol","b","row","checkRowColFull","setTimeout","selectAll","data","enter","d","Board","handleChange","classes","widgetRef","useRef","key","value","useLayoutEffect","current","Box","className","ref","Refresh","viewBox","fill","App","useState","user","setUser","Object","keys","JSON","parse","localStorage","getItem","userOptions","setUserOptions","setPoints","maxPoints","setMaxPoints","useEffect","my1010UserPoints","undefined","setItem","stringify","useCallback","Autocomplete","onChange","newValue","inputValue","selectOnFocus","clearOnBlur","handleHomeEndKeys","options","getOptionLabel","option","renderOption","freeSolo","renderInput","params","TextField","placeholder","Button","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a82691d.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height: '100%',\n    overflow: 'hidden'\n  },\n  header: {\n    display:'flex',\n    overflow:'hidden',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: \"center\",\n    textAlign:'center',\n    fontFamily: 'fantasy',\n    color: '#444',\n    padding: '0.6em',\n    backgroundColor: '#8dd3c7'\n  },\n  points: {\n    display:'flex',\n    overflow:'hidden',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: \"center\",\n    textAlign:'center',\n    fontFamily: 'fantasy',\n    color: '#444',\n    backgroundColor: 'white'\n  },\n  h2:{\n    margin:'0 1px',\n    fontSize:'1.1em',\n    color:'#444'\n  },\n  h3:{\n    margin:'0 1px',\n    fontSize:'1.0em',\n    color:'#444'\n  },\n  board:{\n    display:'flex',\n    overflow:'hidden',\n    width:'100%',\n    height: 'auto',\n    flexDirection: 'column',\n    // justifyContent: 'center', \n    alignItems: \"center\",\n    textAlign:'center',\n    padding: '0.2em',\n    backgroundColor: '#ffffff'\n  },\n  refresh: {\n    padding: '0 0 0 13px',\n    cursor: 'pointer'\n  }\n}));\n\nexport default useStyles;","import * as d3 from 'd3';\n\nexport const Stones = [\n    {stone:[[0,0]], weight: 4, type:0},\n\n    {stone:[[0,0],[0,1]], weight: 3, type:1}, \n    {stone:[[0,0],[1,0]], weight: 3, type:1},\n\n    {stone:[[0,0],[0,1],[0,2]], weight: 2, type:2},\n    {stone:[[0,0],[1,0],[2,0]], weight: 2, type:2},\n    {stone:[[0,0],[1,0],[1,1]], weight: 2, type:0},\n    {stone:[[0,0],[1,0],[0,1]], weight: 2, type:3},\n    {stone:[[0,0],[0,1],[1,1]], weight: 2, type:3},\n    {stone:[[1,0],[1,1],[0,1]], weight: 2, type:3},\n\n    {stone:[[0,0],[0,1],[0,2],[0,3]], weight: 1, type:4},\n    {stone:[[0,0],[1,0],[2,0],[3,0]], weight: 1, type:4},\n    {stone:[[0,0],[0,1],[1,0],[1,1]], weight: 1, type:4},\n    {stone:[[0,0],[0,1],[0,2],[1,2]], weight: 1, type:5},\n    {stone:[[1,0],[1,1],[1,2],[0,2]], weight: 1, type:5},\n    {stone:[[0,0],[1,0],[0,1],[2,0]], weight: 1, type:5},\n    {stone:[[0,0],[1,0],[2,0],[2,1]], weight: 1, type:5},\n    \n    {stone:[[1,0],[1,1],[1,2],[0,1]], weight: 1, type:6},\n    {stone:[[0,0],[0,1],[0,2],[1,1]], weight: 1, type:6},\n    {stone:[[1,0],[0,1],[1,1],[2,1]], weight: 1, type:6},\n    {stone:[[0,0],[1,0],[2,0],[1,1]], weight: 1, type:6},\n\n    {stone:[[0,1],[1,0],[1,1],[2,0]], weight: 1, type:7},\n    {stone:[[0,0],[1,0],[1,1],[2,1]], weight: 1, type:7},\n\n    {stone:[[0,0],[1,0],[2,0],[0,1],[1,1],[2,1],[0,2],[1,2],[2,2]], weight: 1, type:0}\n]\n\nconst weightedSample = (arr, wgh) => {\n    let w = wgh.reduce((a, e) => a + e);\n    let r = Math.random() * w;\n    return arr.find((e, i) => (r -= wgh[i]) < 0);\n}\n\nexport const generateStones = (N = 3) => {\n    let stn = d3.range(N).map(() => {\n        return weightedSample(d3.range(Stones.length), Stones.map(a=>a.weight))\n    })\n    return stn.map(s => Stones[s])\n}","import { Box } from '@material-ui/core'\nimport React, {useRef, useLayoutEffect} from 'react'\n\nimport useStyles from '../style';\nimport * as d3 from 'd3';\nimport { generateStones } from './Stones'\n\nconst draw = (div, config, handleGameChange) => {\n    let p=config.padding,\n        s = Math.floor(div.getBoundingClientRect().width / config.grid - p * 2) || config.size,\n        width = config.grid * (s + p),\n        height = (config.grid + 5) * (s + p),\n        col = d3.scaleOrdinal().range(config.colors);\n\n    const board = d3.range(config.grid).map((r) => \n        d3.range(config.grid).map((c) => \n            ({\n                x: c * (s + p), \n                y: r * (s + p), \n                free: true \n            })));\n\n    let stones = generateStones(config.stones), \n        drawnStones = [], \n        stoneCodes = {},\n        currentStoneNrs = [],\n        currentStoneStartpost = {x:0, y:0},\n        stonesLayed = 0, \n        movingStone = 0;\n\n    const removeCell = (cell) => {\n        if (!!cell.stone){\n            cell.stone.transition().duration(500)\n                .attr(\"x\",s / 2).attr(\"y\", s / 2)\n                .attr(\"height\", 0).attr(\"width\",0).remove();\n        }\n        cell['stone'] = null;\n        cell.free = true;\n    }\n\n    const checkRowColFull = () => {\n        let fullRow = [], fullColumn = [];\n        for (let r = 0; r < config.grid; r++){\n            let cRow = board[r].every(c=>!c.free);\n            let cCol = board.map(b => b[r]).every(c=>!c.free);\n            if (cRow) {\n                fullRow.push(r);\n            }\n            if (cCol) {\n                fullColumn.push(r);\n            }\n        }\n        fullRow.forEach(row => {\n            board[row].forEach(cell => {\n                removeCell(cell)\n            })\n        })\n        fullColumn.forEach(col => {\n            board.forEach(row => {\n                let cell = row[col]\n                removeCell(cell);\n            })\n        })\n        return (fullRow.length + fullColumn.length) * config.grid;\n    }\n        \n    const snapToGrid = (x, y) => {\n        let pos = {\n            c: Math.max(0, Math.floor(x / (s + p))),\n            r: Math.max(0, Math.floor(y / (s + p)))\n        }\n        if (pos.r >= config.grid) {\n            pos.y = currentStoneStartpost.y; //height + s * 2\n            pos.x = currentStoneStartpost.x; //(width - s) / 2\n            pos.c = pos.r = null;\n        } else {\n            pos.y = Math.min(config.grid-1, pos.r) * (s + p)\n            pos.x = Math.min(config.grid-1, pos.c) * (s + p)\n        }\n        return pos\n    }\n\n    const checkPositionFree = (pos, codes) => {\n        let flag = true;\n        codes.forEach(t => {\n            if (pos.c===null || pos.r===null){\n                flag = false\n            } else if (t[0]+pos.c >= config.grid || t[0]+pos.c < 0 || t[1]+pos.r >= config.grid || t[1]+pos.r < 0){\n                flag = false\n            } else if (t[1]+pos.r >= config.grid || t[0]+pos.c >= config.grid) {\n                flag = false\n            } else if (board[t[1]+pos.r][t[0]+pos.c].free===false){\n                flag = false;\n            }\n        })\n        return flag;\n    }\n\n    const setPosition = (pos, val, codes, stn) => {\n        codes.forEach((t,i) => {\n            board[t[1]+pos.r][t[0]+pos.c].free = val;\n            board[t[1]+pos.r][t[0]+pos.c].stone = stn[i];\n        });\n    }\n\n    const moveStone = (x, y, stn) => {\n        stn.forEach(t => t.attr(\"transform\",\"translate(\"+(x)+\",\"+(y)+\")\"));\n    }\n\n    let drawnPiecePos = 0;\n    const drawStonePieces  = (stn, color, index) => {\n        let pieces = []\n        let stoneWidth = d3.max(stn.map(s => s[0]));\n        let stoneHeight = d3.max(stn.map(s => s[1]));\n        let stonePosY = height - 4 * (s+p)\n        let stonePosX = drawnPiecePos * (s + p);\n        if (stonePosX > width - (stoneWidth+1) * (s + p)){\n            // stonePosY = height - 2 * (s+p)\n            stonePosX = width - (stoneWidth+1) * (s + p)\n        }\n        let gPieces = svg.append(\"g\")\n        stn.forEach((cell) => {\n            let piece = gPieces.append(\"rect\")\n                .attr(\"class\",\"stn\")\n                .attr(\"x\", cell[0] * (s + p) )\n                .attr(\"y\", cell[1] * (s + p))\n                .attr(\"width\", s )\n                .attr(\"height\", s )\n                .attr(\"rx\", 1)\n                .attr(\"ry\", 1)\n                .style(\"fill\", col(color))\n                .style(\"fill-opacity\", 0.75)\n                .style(\"stroke\", \"#000\")\n                .style(\"stroke-width\", 1)\n                .attr(\"pointer-events\", \"none\")\n                .attr(\"transform\",\"translate(\"+(stonePosX + 2)+\",\"+(stonePosY)+\")\")\n                // .call(drag);\n            pieces.push(piece)\n        })\n        gPieces.append('rect')\n            .attr(\"class\", \"draghandler\")\n            .attr(\"stn\", index)\n            .attr(\"x\", stonePosX)\n            .attr(\"y\", stonePosY)\n            .attr(\"width\", (stoneWidth + 1)  * (s + p))\n            .attr(\"height\", (stoneHeight + 1) * (s + p))\n            .attr(\"fill-opacity\", 0)\n            .attr(\"stroke\", \"none\")\n            .call(drag);\n        drawnPiecePos += stoneWidth + 2;\n        return pieces;\n    }\n \n    const drawStone = () => {\n        if (currentStoneNrs.length>0){ return }\n\n        stones = generateStones(config.stones);\n        drawnPiecePos = 0;\n        for (let i = 0, I = stones.length; i < I; i++){\n            const stn = stones.shift();\n            stoneCodes[stonesLayed] = stn.stone;\n            let pieces = drawStonePieces(stn.stone, stn.type, stonesLayed);\n            drawnStones.push(pieces);\n            currentStoneNrs.push(stonesLayed);\n            stonesLayed++;\n        }\n    }\n\n    function dragstarted(event, i , n) {\n        movingStone = +d3.select(this).attr(\"stn\");\n        let pos = {x: event.x, y: event.y}\n        let stn = drawnStones[movingStone];\n        let offset = {x: svg.node().getBoundingClientRect().x, \n            y: svg.node().getBoundingClientRect().y};\n        stn.forEach(s => {\n            pos.x = Math.min(pos.x, s.node().getBoundingClientRect().x - offset.x)\n            pos.y = Math.min(pos.y, s.node().getBoundingClientRect().y - offset.y) \n        });\n        currentStoneStartpost = pos;\n        if (currentStoneNrs.indexOf(movingStone) < 0){\n            movingStone = null;\n        }\n    }\n    \n    function dragged(event) {\n        if (movingStone===null){return;}\n        let stn = drawnStones[movingStone]\n        let stnCode = stoneCodes[movingStone]\n        let pos = snapToGrid(event.x, event.y - (s * 2));\n        moveStone(pos.x, pos.y, stn)\n        let check  = checkPositionFree(pos, stnCode);\n        stn.forEach(m => {\n            m.style(\"fill-opacity\", check===false ? 0.25 : 0.75)\n        });\n    }\n    \n    function dragended(event) {\n        if (movingStone===null){return;}\n        let stn = drawnStones[movingStone]\n        let stnCode = stoneCodes[movingStone]\n        let pos = snapToGrid(event.x, event.y - (s * 2));\n        let check  = checkPositionFree(pos, stnCode);\n\n        if (check===true){\n            moveStone(pos.x, pos.y, stn);\n            setPosition(pos, false, stnCode, stn)\n            d3.select(this).remove();\n            stn.forEach(s => s.style(\"stroke-width\", 0))\n            handleGameChange('points', stnCode.length);\n            currentStoneNrs.splice(currentStoneNrs.indexOf(movingStone), 1);\n            let points = checkRowColFull();\n            setTimeout(()=>{handleGameChange('fullrow', points)}, 500);\n            drawStone();\n        } else {\n            pos = snapToGrid(width, height);\n            moveStone(pos.x, pos.y, stn);\n            stn.forEach(m => {\n                m.style(\"fill-opacity\", 0.75)\n            });\n        }\n    }\n    \n    const drag = d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended);\n\n    d3.select(div).selectAll('*').remove();\n\n    const svg = d3.select(div).append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .append(\"g\")\n        .attr(\"transform\",\"translate(\"+p+\",\"+p+\")\");\n\n    let row = svg.selectAll(\".row\")\n        .data(board)\n        .enter().append(\"g\")\n        .attr(\"class\", \"row\");\n\n    row.selectAll(\".square\")\n        .data((d) => d)\n        .enter().append(\"rect\")\n        .attr(\"class\",\"board\")\n        .attr(\"x\", (d) => d.x )\n        .attr(\"y\", (d) => d.y )\n        .attr(\"width\", s )\n        .attr(\"height\", s )\n        .attr(\"rx\", s/config.size)\n        .attr(\"ry\", s/config.size)\n        .style(\"fill\", \"#fff\")\n        .style(\"stroke\", \"#a2a2a2\");\n\n    drawStone();\n    \n}\n\nconst Board = ({config, points, handleChange}) => {\n    const classes = useStyles();\n    const widgetRef = useRef(null);\n\n    const handleGameChange = (key, value) => {\n        handleChange(key, value);\n    }\n\n    useLayoutEffect(() => {\n        if (points > 0){ return; }\n        draw(widgetRef.current, config, handleGameChange);\n    });\n\n    return <Box className={classes.board} ref={widgetRef}></Box>\n\n}\n\nexport default Board;","\nexport const Refresh = () => { \n    return <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"/></svg>\n}","import './App.css';\nimport {Box, Button} from '@material-ui/core'\nimport React, { useEffect } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\n\nimport useStyles from './style';\nimport Board from './widgets/Board'\nimport { useState , useCallback} from 'react';\nimport {Refresh} from './widgets/utils';\n\nfunction App() {\n  const classes = useStyles();\n  const [user, setUser] = useState('')\n  const [userOptions, setUserOptions]  = useState(Object.keys(JSON.parse(localStorage.getItem(\"my1010\") || \"{}\")))\n  const [points, setPoints] = useState(0);\n  const [maxPoints, setMaxPoints] = useState(0)\n  \n  useEffect(()=>{\n    if (!user){ return; }\n    let my1010UserPoints = JSON.parse(localStorage.getItem(\"my1010\") || \"{}\"); \n    if (my1010UserPoints[user]===undefined){\n      my1010UserPoints[user] = 0\n    }\n    my1010UserPoints[user] = Math.max(maxPoints, points);\n    setMaxPoints(my1010UserPoints[user]);\n    localStorage.setItem(\"my1010\",JSON.stringify(my1010UserPoints));\n  }, [points]);\n\n  useEffect(()=>{\n    if (!user){ return; }\n    let my1010UserPoints = JSON.parse(localStorage.getItem(\"my1010\") || \"{}\"); \n    if (my1010UserPoints[user]===undefined){\n      my1010UserPoints[user] = 0\n    }\n    setPoints(0)\n    setMaxPoints(my1010UserPoints[user])\n    setUserOptions(Object.keys(my1010UserPoints))\n  }, [user]);\n\n  const handleChange = useCallback((key, value) => {\n    if (key==='points' || key===\"fullrow\"){\n      setPoints(p => +p+value);\n    }\n  },[]);\n\n  const onHandleRefresh = () => {\n    setPoints(0)\n  }\n\n  const config = {\n    size: 37,\n    grid: 10,\n    padding: 2,\n    stones: 3,\n    colors: [\"#4baf90\",\n      \"#a664c4\",\n      \"#73b34a\",\n      \"#c95682\",\n      \"#787c37\",\n      \"#6587cd\",\n      \"#ce9b44\",\n      \"#c95b41\"]\n  }\n\n  return (\n    <Box className={classes.root}>\n      <header className={classes.header}>\n        <h2 className={classes.h2}>\n          My 1010\n        </h2>\n        <Autocomplete\n          value={user}\n          onChange={(event, newValue) => {\n            if (newValue && newValue.inputValue) {\n              // Create a new value from the user input\n              setUser(newValue.inputValue);\n            } else {\n              setUser(newValue);\n            }\n          }}\n          selectOnFocus\n          clearOnBlur\n          handleHomeEndKeys\n          options={userOptions}\n          getOptionLabel={(option) => {\n            if (option.inputValue) {\n              return option.inputValue;\n            }\n            return option;\n          }}\n          renderOption={(option) => option}\n          style={{ width: 120 }}\n          freeSolo\n          renderInput={(params) => (\n            <TextField {...params} placeholder='user'/>\n          )}\n        />\n      </header>\n      <Box className={classes.points}>\n        <h3 className={classes.h3}>{points}</h3>\n        <Box className={classes.refresh}>\n          <Button onClick={onHandleRefresh}><Refresh/></Button>\n        </Box>\n        <h3 className={classes.h3}>({maxPoints})</h3>\n      </Box>\n      <Board config={config} points={points} handleChange={handleChange}/>\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}