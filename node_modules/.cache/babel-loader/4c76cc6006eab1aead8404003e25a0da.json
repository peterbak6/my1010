{"ast":null,"code":"var _jsxFileName = \"/Users/peterbak/Documents/GitHub/game1010/game1010/src/widgets/Board.js\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@material-ui/core';\nimport React, { useRef, useLayoutEffect } from 'react';\nimport useStyles from '../style';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst draw = div => {\n  const config = {\n    size: 20,\n    grid: 10,\n    padding: 3\n  };\n  let width = config.grid * config.size,\n      height = width;\n  const svg = d3.select(div).append(\"svg\").attr(\"width\", width + config.padding * 2).attr(\"height\", height + config.padding * 2).append(\"g\").attr(\"transform\", \"translate(\" + config.padding + \",\" + config.padding + \")\");\n  const board = d3.range(config.grid).map((r, i) => d3.range(config.grid).map((c, j) => ({\n    x: c * config.size,\n    y: i * config.size,\n    w: config.size,\n    h: config.size\n  })));\n  debugger;\n  let row = svg.selectAll(\".row\").data(board).enter().append(\"g\").attr(\"class\", \"row\");\n  let column = row.selectAll(\".square\").data(d => d).enter().append(\"rect\").attr(\"class\", \"square\").attr(\"x\", d => d.x).attr(\"y\", d => d.y).attr(\"width\", d => d.width).attr(\"height\", d => d.height).style(\"fill\", \"#fff\").style(\"stroke\", \"#222\");\n  debugger;\n};\n\nconst Board = () => {\n  _s();\n\n  const classes = useStyles();\n  const widgetRef = useRef(null);\n  useLayoutEffect(() => {\n    draw(widgetRef.current);\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.board,\n    ref: widgetRef,\n    children: \"Board\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Board, \"cFDRHWlqjeUjP2b8ZEl5Vn6bhi8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/peterbak/Documents/GitHub/game1010/game1010/src/widgets/Board.js"],"names":["Box","React","useRef","useLayoutEffect","useStyles","d3","draw","div","config","size","grid","padding","width","height","svg","select","append","attr","board","range","map","r","i","c","j","x","y","w","h","row","selectAll","data","enter","column","d","style","Board","classes","widgetRef","current"],"mappings":"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","sourcesContent":["import { Box } from '@material-ui/core'\nimport React, {useRef, useLayoutEffect} from 'react'\n\nimport useStyles from '../style';\nimport * as d3 from 'd3';\n\nconst draw = (div) => {\n    const config = {\n        size: 20,\n        grid: 10,\n        padding: 3,\n    }\n\n    let width = config.grid * config.size, height = width;\n    const svg = d3.select(div).append(\"svg\")\n        .attr(\"width\", width + config.padding * 2)\n        .attr(\"height\", height + config.padding * 2)\n        .append(\"g\")\n        .attr(\"transform\",\"translate(\"+config.padding+\",\"+config.padding+\")\");\n    \n    const board = d3.range(config.grid).map((r, i) => \n        d3.range(config.grid).map((c, j) => \n            ({x: c * config.size, y: i * config.size, w: config.size, h: config.size})));\n\n    debugger;\n    \n    let row = svg.selectAll(\".row\")\n        .data(board)\n        .enter().append(\"g\")\n        .attr(\"class\", \"row\");\n\n    let column = row.selectAll(\".square\")\n        .data((d) => d)\n        .enter().append(\"rect\")\n        .attr(\"class\",\"square\")\n        .attr(\"x\", (d) => d.x )\n        .attr(\"y\", (d) => d.y )\n        .attr(\"width\", (d) => d.width)\n        .attr(\"height\", (d) => d.height )\n        .style(\"fill\", \"#fff\")\n        .style(\"stroke\", \"#222\");\n\n    debugger;\n    \n\n\n}\n\nconst Board = () => {\n    const classes = useStyles();\n    const widgetRef = useRef(null);\n\n    useLayoutEffect(() => {\n        \n        draw(widgetRef.current);\n        \n    });\n\n    return <Box className={classes.board} ref={widgetRef}>\n        Board\n    </Box>\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}