{"ast":null,"code":"var _jsxFileName = \"/Users/peterbak/Documents/GitHub/game1010/game1010/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Box } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\nimport useStyles from './style';\nimport Board from './widgets/Board';\nimport { useState, useCallback } from 'react';\nimport { Refresh } from './widgets/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [user, setUser] = useState('');\n  const [userOptions, setUserOptions] = useState(['']);\n  const [points, setPoints] = useState(0);\n  useEffect(() => {\n    let my1010UserPoints = JSON.parse(localStorage.getItem(\"my1010\") || \"{}\");\n    my1010UserPoints[user] = points;\n    localStorage.setItem(\"my1010\", JSON.stringify(my1010UserPoints));\n  }, [points]);\n  useEffect(() => {\n    let my1010UserPoints = JSON.parse(localStorage.getItem(\"my1010\") || \"{}\");\n\n    if (!isNaN(my1010UserPoints[user])) {\n      setPoints(my1010UserPoints[user]);\n    } else {\n      setPoints(0);\n    }\n\n    setUserOptions(Object.keys(my1010UserPoints));\n  }, [user]);\n  const handleChange = useCallback((key, value) => {\n    if (value === 0 || key !== 'points') {\n      return;\n    }\n\n    setPoints(p => +p + value);\n  }, []);\n  const config = {\n    size: 40,\n    grid: 10,\n    padding: 2,\n    stones: 3,\n    colors: [\"#8dd3c7\", \"#ffffb3\", \"#bebada\", \"#fb8072\", \"#80b1d3\", \"#fdb462\", \"#b3de69\", \"#fccde5\", \"#d9d9d9\", \"#bc80bd\", \"#ccebc5\", \"#ffed6f\"],\n    colors1: [\"#66c2a5\", \"#fc8d62\", \"#8da0cb\", \"#e78ac3\", \"#a6d854\", \"#ffd92f\", \"#e5c494\", \"#b3b3b3\"]\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: classes.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.h2,\n        children: \"My 1010\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        value: user,\n        onChange: (event, newValue) => {\n          if (newValue && newValue.inputValue) {\n            // Create a new value from the user input\n            setUser(newValue.inputValue);\n          } else {\n            setUser(newValue);\n          }\n        },\n        selectOnFocus: true,\n        clearOnBlur: true,\n        handleHomeEndKeys: true,\n        options: userOptions,\n        getOptionLabel: option => {\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n\n          return option;\n        },\n        renderOption: option => option,\n        style: {\n          width: 120\n        },\n        freeSolo: true,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.h3,\n        children: [\"Points: \", points]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.refresh,\n        children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      config: config,\n      points: points,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cR8mOjVEVSGpzDqLFIp9MzUFEYI=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/peterbak/Documents/GitHub/game1010/game1010/src/App.js"],"names":["Box","React","useEffect","Autocomplete","TextField","useStyles","Board","useState","useCallback","Refresh","App","classes","user","setUser","userOptions","setUserOptions","points","setPoints","my1010UserPoints","JSON","parse","localStorage","getItem","setItem","stringify","isNaN","Object","keys","handleChange","key","value","p","config","size","grid","padding","stones","colors","colors1","root","header","h2","event","newValue","inputValue","option","width","params","h3","refresh"],"mappings":"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","sourcesContent":["import './App.css';\nimport {Box} from '@material-ui/core'\nimport React, { useEffect } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\n\nimport useStyles from './style';\nimport Board from './widgets/Board'\nimport { useState , useCallback} from 'react';\nimport {Refresh} from './widgets/utils';\n\nfunction App() {\n  const classes = useStyles();\n  const [user, setUser] = useState('')\n  const [userOptions, setUserOptions]  = useState([''])\n  const [points, setPoints] = useState(0);\n\n  useEffect(()=>{\n    let my1010UserPoints = JSON.parse(localStorage.getItem(\"my1010\") || \"{}\"); \n    my1010UserPoints[user] = points;\n    localStorage.setItem(\"my1010\",JSON.stringify(my1010UserPoints));\n  }, [points]);\n\n  useEffect(()=>{\n    let my1010UserPoints = JSON.parse(localStorage.getItem(\"my1010\") || \"{}\"); \n    if (!isNaN(my1010UserPoints[user])){\n      setPoints(my1010UserPoints[user])\n    } else {\n      setPoints(0)\n    }\n    setUserOptions(Object.keys(my1010UserPoints))\n  }, [user]);\n\n  const handleChange = useCallback((key, value) => {\n    if (value===0 || key!=='points'){ return; }\n    setPoints(p => +p+value);\n  },[]);\n\n  const config = {\n    size: 40,\n    grid: 10,\n    padding: 2,\n    stones: 3,\n    colors: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"],\n    colors1: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]\n  }\n\n  return (\n    <Box className={classes.root}>\n      <header className={classes.header}>\n        <h2 className={classes.h2}>\n          My 1010\n        </h2>\n        <Autocomplete\n          value={user}\n          onChange={(event, newValue) => {\n            if (newValue && newValue.inputValue) {\n              // Create a new value from the user input\n              setUser(newValue.inputValue);\n            } else {\n              setUser(newValue);\n            }\n          }}\n          selectOnFocus\n          clearOnBlur\n          handleHomeEndKeys\n          options={userOptions}\n          getOptionLabel={(option) => {\n            if (option.inputValue) {\n              return option.inputValue;\n            }\n            return option;\n          }}\n          renderOption={(option) => option}\n          style={{ width: 120 }}\n          freeSolo\n          renderInput={(params) => (\n            <TextField {...params} />\n          )}\n        />\n        <h3 className={classes.h3}>Points: {points}</h3>\n        <Box className={classes.refresh}>\n          <Refresh/>\n      </Box>\n      </header>\n      <Board config={config} points={points} handleChange={handleChange}/>\n    </Box>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}