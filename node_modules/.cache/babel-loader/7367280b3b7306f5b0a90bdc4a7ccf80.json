{"ast":null,"code":"var _jsxFileName = \"/Users/peterbak/Documents/GitHub/game1010/game1010/src/widgets/Board.js\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@material-ui/core';\nimport React, { useRef, useLayoutEffect } from 'react';\nimport useStyles from '../style';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generateTargets = (N = 20, E = 31) => {\n  let targets = d3.range(N).map(n => {\n    return Math.round(Math.random() * E);\n  });\n  return targets;\n};\n\nconst draw = div => {\n  const config = {\n    size: 40,\n    grid: 10,\n    padding: 2\n  };\n  let s = config.size,\n      p = config.padding,\n      width = config.grid * (s + p),\n      height = width;\n\n  const snapToGrid = (x, y) => {\n    let pos = {\n      c: Math.max(0, Math.floor(x / (s + p))),\n      r: Math.max(0, Math.floor(y / (s + p)))\n    };\n\n    if (pos.r >= config.grid) {\n      pos.y = height + s * 2;\n      pos.x = (width - s) / 2;\n      pos.c = pos.r = null;\n    } else {\n      pos.y = Math.min(config.grid - 1, pos.r) * (s + p);\n      pos.x = Math.min(config.grid - 1, pos.c) * (s + p);\n    }\n\n    return pos;\n  };\n\n  function dragstarted() {\n    d3.select(this).attr(\"stroke\", \"black\");\n  }\n\n  function dragged(event) {\n    let pos = snapToGrid(event.x, event.y);\n    d3.select(this).raise().attr(\"x\", pos.x).attr(\"y\", pos.y);\n  }\n\n  function dragended() {\n    d3.select(this).attr(\"stroke\", null);\n  }\n\n  const drag = d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended);\n  d3.select(div).selectAll('*').remove();\n  const svg = d3.select(div).append(\"svg\").attr(\"width\", width + p * 2).attr(\"height\", (height + p) * 2).append(\"g\").attr(\"transform\", \"translate(\" + p + \",\" + p + \")\");\n  const board = d3.range(config.grid).map((r, i) => d3.range(config.grid).map((c, j) => ({\n    x: c * (s + p),\n    y: i * (s + p),\n    free: true\n  })));\n  let row = svg.selectAll(\".row\").data(board).enter().append(\"g\").attr(\"class\", \"row\");\n  let column = row.selectAll(\".square\").data(d => d).enter().append(\"rect\").attr(\"class\", \"square\").attr(\"x\", d => d.x).attr(\"y\", d => d.y).attr(\"width\", s).attr(\"height\", s).attr(\"rx\", s / 10).attr(\"ry\", s / 10).style(\"fill\", \"#fff\").style(\"stroke\", \"#444\");\n  console.info(generateTargets());\n  let target = svg.append(\"rect\").attr(\"class\", \"target\").attr(\"x\", (width - s) / 2).attr(\"y\", height + s * 2).attr(\"width\", s).attr(\"height\", s).attr(\"rx\", s / 10).attr(\"ry\", s / 10).style(\"fill\", \"#ff7f00\").style(\"stroke\", \"#000\").call(drag);\n};\n\nconst Board = () => {\n  _s();\n\n  const classes = useStyles();\n  const widgetRef = useRef(null);\n  useLayoutEffect(() => {\n    draw(widgetRef.current);\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.board,\n    ref: widgetRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Board, \"cFDRHWlqjeUjP2b8ZEl5Vn6bhi8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/peterbak/Documents/GitHub/game1010/game1010/src/widgets/Board.js"],"names":["Box","React","useRef","useLayoutEffect","useStyles","d3","generateTargets","N","E","targets","range","map","n","Math","round","random","draw","div","config","size","grid","padding","s","p","width","height","snapToGrid","x","y","pos","c","max","floor","r","min","dragstarted","select","attr","dragged","event","raise","dragended","drag","on","selectAll","remove","svg","append","board","i","j","free","row","data","enter","column","d","style","console","info","target","call","Board","classes","widgetRef","current"],"mappings":"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","sourcesContent":["import { Box } from '@material-ui/core'\nimport React, {useRef, useLayoutEffect} from 'react'\n\nimport useStyles from '../style';\nimport * as d3 from 'd3';\n\nconst generateTargets = (N=20, E=31) => {\n    let targets = d3.range(N).map(n => {\n        return Math.round(Math.random() * E)\n    })\n    return targets\n}\n\nconst draw = (div) => {\n    const config = {\n        size: 40,\n        grid: 10,\n        padding: 2,\n    }\n\n    let s = config.size, p=config.padding, width = config.grid * (s + p), height = width;\n\n    const snapToGrid = (x, y) => {\n        let pos = {\n            c: Math.max(0, Math.floor(x / (s + p))),\n            r: Math.max(0, Math.floor(y / (s + p)))\n        }\n        if (pos.r >= config.grid) {\n            pos.y = height + s * 2\n            pos.x = (width - s) / 2\n            pos.c = pos.r = null;\n        } else {\n            pos.y = Math.min(config.grid-1, pos.r) * (s + p)\n            pos.x = Math.min(config.grid-1, pos.c) * (s + p)\n        }\n        return pos\n    }\n\n    function dragstarted() {\n        d3.select(this).attr(\"stroke\", \"black\");\n    }\n    \n    function dragged(event) {\n        let pos = snapToGrid(event.x, event.y);\n        d3.select(this).raise().attr(\"x\", pos.x).attr(\"y\", pos.y);\n    }\n    \n    function dragended() {\n        d3.select(this).attr(\"stroke\", null);\n    }\n    \n    const drag = d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended);\n\n    d3.select(div).selectAll('*').remove();\n\n    const svg = d3.select(div).append(\"svg\")\n        .attr(\"width\", width + p * 2)\n        .attr(\"height\", (height + p) * 2)\n        .append(\"g\")\n        .attr(\"transform\",\"translate(\"+p+\",\"+p+\")\");\n    \n    const board = d3.range(config.grid).map((r, i) => \n        d3.range(config.grid).map((c, j) => \n            ({\n                x: c * (s + p), \n                y: i * (s + p), \n                free: true \n            })));\n\n    let row = svg.selectAll(\".row\")\n        .data(board)\n        .enter().append(\"g\")\n        .attr(\"class\", \"row\");\n\n    let column = row.selectAll(\".square\")\n        .data((d) => d)\n        .enter().append(\"rect\")\n        .attr(\"class\",\"square\")\n        .attr(\"x\", (d) => d.x )\n        .attr(\"y\", (d) => d.y )\n        .attr(\"width\", s )\n        .attr(\"height\", s )\n        .attr(\"rx\", s/10)\n        .attr(\"ry\", s/10)\n        .style(\"fill\", \"#fff\")\n        .style(\"stroke\", \"#444\");\n    \n    console.info(generateTargets())\n    let target = svg.append(\"rect\")\n        .attr(\"class\",\"target\")\n        .attr(\"x\", (width - s) / 2 )\n        .attr(\"y\", height + s * 2 )\n        .attr(\"width\", s )\n        .attr(\"height\", s )\n        .attr(\"rx\", s/10)\n        .attr(\"ry\", s/10)\n        .style(\"fill\", \"#ff7f00\")\n        .style(\"stroke\", \"#000\")\n        .call(drag);\n\n\n}\n\nconst Board = () => {\n    const classes = useStyles();\n    const widgetRef = useRef(null);\n\n    useLayoutEffect(() => {\n        \n        draw(widgetRef.current);\n        \n    });\n\n    return <Box className={classes.board} ref={widgetRef}>\n        \n    </Box>\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}