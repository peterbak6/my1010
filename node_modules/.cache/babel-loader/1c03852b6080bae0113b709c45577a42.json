{"ast":null,"code":"import*as d3 from'd3';export var Stones=[{stone:[[0,0]],weight:4,type:0},{stone:[[0,0],[0,1]],weight:3,type:1},{stone:[[0,0],[1,0]],weight:3,type:1},{stone:[[0,0],[0,1],[0,2]],weight:2,type:2},{stone:[[0,0],[1,0],[2,0]],weight:2,type:2},{stone:[[0,0],[1,0],[1,1]],weight:2,type:0},{stone:[[0,0],[1,0],[0,1]],weight:2,type:3},{stone:[[0,0],[0,1],[1,1]],weight:2,type:3},{stone:[[1,0],[1,1],[0,1]],weight:2,type:3},{stone:[[0,0],[0,1],[0,2],[0,3]],weight:1,type:4},{stone:[[0,0],[1,0],[2,0],[3,0]],weight:1,type:4},{stone:[[0,0],[0,1],[1,0],[1,1]],weight:1,type:4},{stone:[[0,0],[0,1],[0,2],[1,2]],weight:1,type:5},{stone:[[1,0],[1,1],[1,2],[0,2]],weight:1,type:5},{stone:[[0,0],[1,0],[0,1],[2,0]],weight:1,type:5},{stone:[[0,0],[1,0],[2,0],[2,1]],weight:1,type:5},{stone:[[1,0],[1,1],[1,2],[0,1]],weight:1,type:6},{stone:[[0,0],[0,1],[0,2],[1,1]],weight:1,type:6},{stone:[[1,0],[0,1],[1,1],[2,1]],weight:1,type:6},{stone:[[0,0],[1,0],[2,0],[1,1]],weight:1,type:6},{stone:[[0,1],[1,0],[1,1],[2,0]],weight:1,type:7},{stone:[[0,0],[1,0],[1,1],[2,1]],weight:1,type:7},{stone:[[0,0],[1,0],[2,0],[0,1],[1,1],[2,1],[0,2],[1,2],[2,2]],weight:1,type:0}];var weightedSample=function weightedSample(arr,wgh){var w=wgh.reduce(function(a,e){return a+e;});var r=Math.random()*w;return arr.find(function(e,i){return(r-=wgh[i])<0;});};export var generateStones=function generateStones(){var N=arguments.length>0&&arguments[0]!==undefined?arguments[0]:3;var stn=d3.range(N).map(function(){return weightedSample(d3.range(Stones.length),Stones.map(function(a){return a.weight;}));});return stn.map(function(s){return Stones[s];});};","map":{"version":3,"sources":["/Users/peterbak/Documents/game1010/src/widgets/Stones.js"],"names":["d3","Stones","stone","weight","type","weightedSample","arr","wgh","w","reduce","a","e","r","Math","random","find","i","generateStones","N","stn","range","map","length","s"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\n\nexport const Stones = [\n    {stone:[[0,0]], weight: 4, type:0},\n\n    {stone:[[0,0],[0,1]], weight: 3, type:1}, \n    {stone:[[0,0],[1,0]], weight: 3, type:1},\n\n    {stone:[[0,0],[0,1],[0,2]], weight: 2, type:2},\n    {stone:[[0,0],[1,0],[2,0]], weight: 2, type:2},\n    {stone:[[0,0],[1,0],[1,1]], weight: 2, type:0},\n    {stone:[[0,0],[1,0],[0,1]], weight: 2, type:3},\n    {stone:[[0,0],[0,1],[1,1]], weight: 2, type:3},\n    {stone:[[1,0],[1,1],[0,1]], weight: 2, type:3},\n\n    {stone:[[0,0],[0,1],[0,2],[0,3]], weight: 1, type:4},\n    {stone:[[0,0],[1,0],[2,0],[3,0]], weight: 1, type:4},\n    {stone:[[0,0],[0,1],[1,0],[1,1]], weight: 1, type:4},\n    {stone:[[0,0],[0,1],[0,2],[1,2]], weight: 1, type:5},\n    {stone:[[1,0],[1,1],[1,2],[0,2]], weight: 1, type:5},\n    {stone:[[0,0],[1,0],[0,1],[2,0]], weight: 1, type:5},\n    {stone:[[0,0],[1,0],[2,0],[2,1]], weight: 1, type:5},\n    \n    {stone:[[1,0],[1,1],[1,2],[0,1]], weight: 1, type:6},\n    {stone:[[0,0],[0,1],[0,2],[1,1]], weight: 1, type:6},\n    {stone:[[1,0],[0,1],[1,1],[2,1]], weight: 1, type:6},\n    {stone:[[0,0],[1,0],[2,0],[1,1]], weight: 1, type:6},\n\n    {stone:[[0,1],[1,0],[1,1],[2,0]], weight: 1, type:7},\n    {stone:[[0,0],[1,0],[1,1],[2,1]], weight: 1, type:7},\n\n    {stone:[[0,0],[1,0],[2,0],[0,1],[1,1],[2,1],[0,2],[1,2],[2,2]], weight: 1, type:0}\n]\n\nconst weightedSample = (arr, wgh) => {\n    let w = wgh.reduce((a, e) => a + e);\n    let r = Math.random() * w;\n    return arr.find((e, i) => (r -= wgh[i]) < 0);\n}\n\nexport const generateStones = (N = 3) => {\n    let stn = d3.range(N).map(() => {\n        return weightedSample(d3.range(Stones.length), Stones.map(a=>a.weight))\n    })\n    return stn.map(s => Stones[s])\n}"]},"metadata":{},"sourceType":"module"}