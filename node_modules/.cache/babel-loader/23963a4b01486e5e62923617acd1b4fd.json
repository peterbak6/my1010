{"ast":null,"code":"import{Box}from'@material-ui/core';import React,{useRef,useLayoutEffect}from'react';import useStyles from'../style';import*as d3 from'd3';import{generateStones}from'./Stones';import{jsx as _jsx}from\"react/jsx-runtime\";var draw=function draw(div,config,handleGameChange){var p=config.padding,s=Math.floor(div.getBoundingClientRect().width/config.grid-p*2)||config.size,width=config.grid*(s+p),height=(config.grid+5)*(s+p),col=d3.scaleOrdinal().range(config.colors);var board=d3.range(config.grid).map(function(r){return d3.range(config.grid).map(function(c){return{x:c*(s+p),y:r*(s+p),free:true};});});var stones=generateStones(config.stones),drawnStones=[],stoneCodes={},currentStoneNrs=[],currentStoneStartpost={x:0,y:0},stonesLayed=0,movingStone=0;var removeCell=function removeCell(cell){cell.stone.transition().duration(500).attr(\"x\",s/2).attr(\"y\",s/2).attr(\"height\",0).attr(\"width\",0).remove();cell['stone']=null;cell.free=true;};var checkRowColFull=function checkRowColFull(){var fullRow=[],fullColumn=[];var _loop=function _loop(r){var cRow=board[r].every(function(c){return!c.free;});var cCol=board.map(function(b){return b[r];}).every(function(c){return!c.free;});if(cRow){fullRow.push(r);}if(cCol){fullColumn.push(r);}};for(var r=0;r<config.grid;r++){_loop(r);}fullRow.forEach(function(row){board[row].forEach(function(cell){removeCell(cell);});});fullColumn.forEach(function(col){board.forEach(function(row){var cell=row[col];removeCell(cell);});});return(fullRow.length+fullColumn.length)*config.grid;};var snapToGrid=function snapToGrid(x,y){var pos={c:Math.max(0,Math.floor(x/(s+p))),r:Math.max(0,Math.floor(y/(s+p)))};if(pos.r>=config.grid){pos.y=currentStoneStartpost.y;//height + s * 2\npos.x=currentStoneStartpost.x;//(width - s) / 2\npos.c=pos.r=null;}else{pos.y=Math.min(config.grid-1,pos.r)*(s+p);pos.x=Math.min(config.grid-1,pos.c)*(s+p);}return pos;};var checkPositionFree=function checkPositionFree(pos,codes){var flag=true;codes.forEach(function(t){if(pos.c===null||pos.r===null){flag=false;}else if(t[0]+pos.c>=config.grid||t[0]+pos.c<0||t[1]+pos.r>=config.grid||t[1]+pos.r<0){flag=false;}else if(board[t[1]+pos.r][t[0]+pos.c].free===false){flag=false;}});return flag;};var setPosition=function setPosition(pos,val,codes,stn){codes.forEach(function(t,i){board[t[1]+pos.r][t[0]+pos.c].free=val;board[t[1]+pos.r][t[0]+pos.c].stone=stn[i];});};var moveStone=function moveStone(x,y,stn){stn.forEach(function(t){return t.attr(\"transform\",\"translate(\"+x+\",\"+y+\")\");});};var drawnPiecePos=0;var drawStonePieces=function drawStonePieces(stn,color,index){var pieces=[];var stoneWidth=d3.max(stn.map(function(s){return s[0];}));var stoneHeight=d3.max(stn.map(function(s){return s[1];}));var stonePosY=height-4*(s+p);var stonePosX=drawnPiecePos*(s+p);if(stonePosX>width-(stoneWidth+1)*(s+p)){// stonePosY = height - 2 * (s+p)\nstonePosX=width-(stoneWidth+1)*(s+p);}var gPieces=svg.append(\"g\");stn.forEach(function(cell){var piece=gPieces.append(\"rect\").attr(\"class\",\"stn\").attr(\"x\",cell[0]*(s+p)).attr(\"y\",cell[1]*(s+p)).attr(\"width\",s).attr(\"height\",s).attr(\"rx\",1).attr(\"ry\",1).style(\"fill\",col(color)).style(\"fill-opacity\",0.75).style(\"stroke\",\"#000\").style(\"stroke-width\",1).attr(\"pointer-events\",\"none\").attr(\"transform\",\"translate(\"+(stonePosX+2)+\",\"+stonePosY+\")\");// .call(drag);\npieces.push(piece);});gPieces.append('rect').attr(\"class\",\"draghandler\").attr(\"stn\",index).attr(\"x\",stonePosX).attr(\"y\",stonePosY).attr(\"width\",(stoneWidth+1)*(s+p)).attr(\"height\",(stoneHeight+1)*(s+p)).attr(\"fill-opacity\",0).attr(\"stroke\",\"none\").call(drag);drawnPiecePos+=stoneWidth+2;return pieces;};var drawStone=function drawStone(){if(currentStoneNrs.length>0){return;}stones=generateStones(config.stones);drawnPiecePos=0;for(var i=0,I=stones.length;i<I;i++){var stn=stones.shift();stoneCodes[stonesLayed]=stn.stone;var pieces=drawStonePieces(stn.stone,stn.type,stonesLayed);drawnStones.push(pieces);currentStoneNrs.push(stonesLayed);stonesLayed++;}};function dragstarted(event,i,n){movingStone=+d3.select(this).attr(\"stn\");var pos={x:event.x,y:event.y};var stn=drawnStones[movingStone];var offset={x:svg.node().getBoundingClientRect().x,y:svg.node().getBoundingClientRect().y};stn.forEach(function(s){pos.x=Math.min(pos.x,s.node().getBoundingClientRect().x-offset.x);pos.y=Math.min(pos.y,s.node().getBoundingClientRect().y-offset.y);});currentStoneStartpost=pos;if(currentStoneNrs.indexOf(movingStone)<0){movingStone=null;}}function dragged(event){if(movingStone===null){return;}var stn=drawnStones[movingStone];var stnCode=stoneCodes[movingStone];var pos=snapToGrid(event.x,event.y-s*2);moveStone(pos.x,pos.y,stn);var check=checkPositionFree(pos,stnCode);stn.forEach(function(m){m.style(\"fill-opacity\",check===false?0.25:0.75);});}function dragended(event){if(movingStone===null){return;}var stn=drawnStones[movingStone];var stnCode=stoneCodes[movingStone];var pos=snapToGrid(event.x,event.y-s*2);var check=checkPositionFree(pos,stnCode);if(check===true){setPosition(pos,false,stnCode,stn);d3.select(this).remove();stn.forEach(function(s){return s.style(\"stroke-width\",0);});handleGameChange('points',stnCode.length);currentStoneNrs.splice(currentStoneNrs.indexOf(movingStone),1);var points=checkRowColFull();setTimeout(function(){handleGameChange('fullrow',points);},500);drawStone();}else{pos=snapToGrid(width,height);moveStone(pos.x,pos.y,stn);stn.forEach(function(m){m.style(\"fill-opacity\",0.75);});}}var drag=d3.drag().on(\"start\",dragstarted).on(\"drag\",dragged).on(\"end\",dragended);d3.select(div).selectAll('*').remove();var svg=d3.select(div).append(\"svg\").attr(\"width\",width).attr(\"height\",height).append(\"g\").attr(\"transform\",\"translate(\"+p+\",\"+p+\")\");var row=svg.selectAll(\".row\").data(board).enter().append(\"g\").attr(\"class\",\"row\");row.selectAll(\".square\").data(function(d){return d;}).enter().append(\"rect\").attr(\"class\",\"board\").attr(\"x\",function(d){return d.x;}).attr(\"y\",function(d){return d.y;}).attr(\"width\",s).attr(\"height\",s).attr(\"rx\",s/config.size).attr(\"ry\",s/config.size).style(\"fill\",\"#fff\").style(\"stroke\",\"#a2a2a2\");drawStone();};var Board=function Board(_ref){var config=_ref.config,points=_ref.points,handleChange=_ref.handleChange;var classes=useStyles();var widgetRef=useRef(null);var handleGameChange=function handleGameChange(key,value){handleChange(key,value);};useLayoutEffect(function(){if(points>0){return;}draw(widgetRef.current,config,handleGameChange);});return/*#__PURE__*/_jsx(Box,{className:classes.board,ref:widgetRef});};export default Board;","map":{"version":3,"sources":["/Users/peterbak/Documents/game1010/src/widgets/Board.js"],"names":["Box","React","useRef","useLayoutEffect","useStyles","d3","generateStones","draw","div","config","handleGameChange","p","padding","s","Math","floor","getBoundingClientRect","width","grid","size","height","col","scaleOrdinal","range","colors","board","map","r","c","x","y","free","stones","drawnStones","stoneCodes","currentStoneNrs","currentStoneStartpost","stonesLayed","movingStone","removeCell","cell","stone","transition","duration","attr","remove","checkRowColFull","fullRow","fullColumn","cRow","every","cCol","b","push","forEach","row","length","snapToGrid","pos","max","min","checkPositionFree","codes","flag","t","setPosition","val","stn","i","moveStone","drawnPiecePos","drawStonePieces","color","index","pieces","stoneWidth","stoneHeight","stonePosY","stonePosX","gPieces","svg","append","piece","style","call","drag","drawStone","I","shift","type","dragstarted","event","n","select","offset","node","indexOf","dragged","stnCode","check","m","dragended","splice","points","setTimeout","on","selectAll","data","enter","d","Board","handleChange","classes","widgetRef","key","value","current"],"mappings":"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","sourcesContent":["import { Box } from '@material-ui/core'\nimport React, {useRef, useLayoutEffect} from 'react'\n\nimport useStyles from '../style';\nimport * as d3 from 'd3';\nimport { generateStones } from './Stones'\n\nconst draw = (div, config, handleGameChange) => {\n    let p=config.padding,\n        s = Math.floor(div.getBoundingClientRect().width / config.grid - p * 2) || config.size,\n        width = config.grid * (s + p),\n        height = (config.grid + 5) * (s + p),\n        col = d3.scaleOrdinal().range(config.colors);\n\n    const board = d3.range(config.grid).map((r) => \n        d3.range(config.grid).map((c) => \n            ({\n                x: c * (s + p), \n                y: r * (s + p), \n                free: true \n            })));\n\n    let stones = generateStones(config.stones), \n        drawnStones = [], \n        stoneCodes = {},\n        currentStoneNrs = [],\n        currentStoneStartpost = {x:0, y:0},\n        stonesLayed = 0, \n        movingStone = 0;\n\n    const removeCell = (cell) => {\n        cell.stone.transition().duration(500)\n            .attr(\"x\",s / 2).attr(\"y\", s / 2)\n            .attr(\"height\", 0).attr(\"width\",0).remove();\n        cell['stone'] = null;\n        cell.free = true;\n    }\n\n    const checkRowColFull = () => {\n        let fullRow = [], fullColumn = [];\n        for (let r = 0; r < config.grid; r++){\n            let cRow = board[r].every(c=>!c.free);\n            let cCol = board.map(b => b[r]).every(c=>!c.free);\n            if (cRow) {\n                fullRow.push(r);\n            }\n            if (cCol) {\n                fullColumn.push(r);\n            }\n        }\n        fullRow.forEach(row => {\n            board[row].forEach(cell => {\n                removeCell(cell)\n            })\n        })\n        fullColumn.forEach(col => {\n            board.forEach(row => {\n                let cell = row[col]\n                removeCell(cell);\n            })\n        })\n        return (fullRow.length + fullColumn.length) * config.grid;\n    }\n        \n    const snapToGrid = (x, y) => {\n        let pos = {\n            c: Math.max(0, Math.floor(x / (s + p))),\n            r: Math.max(0, Math.floor(y / (s + p)))\n        }\n        if (pos.r >= config.grid) {\n            pos.y = currentStoneStartpost.y; //height + s * 2\n            pos.x = currentStoneStartpost.x; //(width - s) / 2\n            pos.c = pos.r = null;\n        } else {\n            pos.y = Math.min(config.grid-1, pos.r) * (s + p)\n            pos.x = Math.min(config.grid-1, pos.c) * (s + p)\n        }\n        return pos\n    }\n\n    const checkPositionFree = (pos, codes) => {\n        let flag = true;\n        codes.forEach(t => {\n            if (pos.c===null || pos.r===null){\n                flag = false\n            } else if (t[0]+pos.c >= config.grid || t[0]+pos.c < 0 || t[1]+pos.r >= config.grid || t[1]+pos.r < 0){\n                flag = false\n            } else if (board[t[1]+pos.r][t[0]+pos.c].free===false){\n                flag = false;\n            }\n        })\n        return flag;\n    }\n\n    const setPosition = (pos, val, codes, stn) => {\n        codes.forEach((t,i) => {\n            board[t[1]+pos.r][t[0]+pos.c].free = val;\n            board[t[1]+pos.r][t[0]+pos.c].stone = stn[i];\n        });\n    }\n\n    const moveStone = (x, y, stn) => {\n        stn.forEach(t => t.attr(\"transform\",\"translate(\"+(x)+\",\"+(y)+\")\"));\n    }\n\n    let drawnPiecePos = 0;\n    const drawStonePieces  = (stn, color, index) => {\n        let pieces = []\n        let stoneWidth = d3.max(stn.map(s => s[0]));\n        let stoneHeight = d3.max(stn.map(s => s[1]));\n        let stonePosY = height - 4 * (s+p)\n        let stonePosX = drawnPiecePos * (s + p);\n        if (stonePosX > width - (stoneWidth+1) * (s + p)){\n            // stonePosY = height - 2 * (s+p)\n            stonePosX = width - (stoneWidth+1) * (s + p)\n        }\n        let gPieces = svg.append(\"g\")\n        stn.forEach((cell) => {\n            let piece = gPieces.append(\"rect\")\n                .attr(\"class\",\"stn\")\n                .attr(\"x\", cell[0] * (s + p) )\n                .attr(\"y\", cell[1] * (s + p))\n                .attr(\"width\", s )\n                .attr(\"height\", s )\n                .attr(\"rx\", 1)\n                .attr(\"ry\", 1)\n                .style(\"fill\", col(color))\n                .style(\"fill-opacity\", 0.75)\n                .style(\"stroke\", \"#000\")\n                .style(\"stroke-width\", 1)\n                .attr(\"pointer-events\", \"none\")\n                .attr(\"transform\",\"translate(\"+(stonePosX + 2)+\",\"+(stonePosY)+\")\")\n                // .call(drag);\n            pieces.push(piece)\n        })\n        gPieces.append('rect')\n            .attr(\"class\", \"draghandler\")\n            .attr(\"stn\", index)\n            .attr(\"x\", stonePosX)\n            .attr(\"y\", stonePosY)\n            .attr(\"width\", (stoneWidth + 1)  * (s + p))\n            .attr(\"height\", (stoneHeight + 1) * (s + p))\n            .attr(\"fill-opacity\", 0)\n            .attr(\"stroke\", \"none\")\n            .call(drag);\n        drawnPiecePos += stoneWidth + 2;\n        return pieces;\n    }\n \n    const drawStone = () => {\n        if (currentStoneNrs.length>0){ return }\n\n        stones = generateStones(config.stones);\n        drawnPiecePos = 0;\n        for (let i = 0, I = stones.length; i < I; i++){\n            const stn = stones.shift();\n            stoneCodes[stonesLayed] = stn.stone;\n            let pieces = drawStonePieces(stn.stone, stn.type, stonesLayed);\n            drawnStones.push(pieces);\n            currentStoneNrs.push(stonesLayed);\n            stonesLayed++;\n        }\n    }\n\n    function dragstarted(event, i , n) {\n        movingStone = +d3.select(this).attr(\"stn\");\n        let pos = {x: event.x, y: event.y}\n        let stn = drawnStones[movingStone];\n        let offset = {x: svg.node().getBoundingClientRect().x, \n            y: svg.node().getBoundingClientRect().y};\n        stn.forEach(s => {\n            pos.x = Math.min(pos.x, s.node().getBoundingClientRect().x - offset.x)\n            pos.y = Math.min(pos.y, s.node().getBoundingClientRect().y - offset.y) \n        });\n        currentStoneStartpost = pos;\n        if (currentStoneNrs.indexOf(movingStone) < 0){\n            movingStone = null;\n        }\n    }\n    \n    function dragged(event) {\n        if (movingStone===null){return;}\n        let stn = drawnStones[movingStone]\n        let stnCode = stoneCodes[movingStone]\n        let pos = snapToGrid(event.x, event.y - (s * 2));\n        moveStone(pos.x, pos.y, stn)\n        let check  = checkPositionFree(pos, stnCode);\n        stn.forEach(m => {\n            m.style(\"fill-opacity\", check===false ? 0.25 : 0.75)\n        });\n    }\n    \n    function dragended(event) {\n        if (movingStone===null){return;}\n        let stn = drawnStones[movingStone]\n        let stnCode = stoneCodes[movingStone]\n        let pos = snapToGrid(event.x, event.y - (s * 2));\n        let check  = checkPositionFree(pos, stnCode);\n\n        if (check===true){\n            setPosition(pos, false, stnCode, stn)\n            d3.select(this).remove();\n            stn.forEach(s => s.style(\"stroke-width\", 0))\n            handleGameChange('points', stnCode.length);\n            currentStoneNrs.splice(currentStoneNrs.indexOf(movingStone), 1);\n            let points = checkRowColFull();\n            setTimeout(()=>{handleGameChange('fullrow', points)}, 500);\n            drawStone();\n        } else {\n            pos = snapToGrid(width, height);\n            moveStone(pos.x, pos.y, stn);\n            stn.forEach(m => {\n                m.style(\"fill-opacity\", 0.75)\n            });\n        }\n    }\n    \n    const drag = d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended);\n\n    d3.select(div).selectAll('*').remove();\n\n    const svg = d3.select(div).append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .append(\"g\")\n        .attr(\"transform\",\"translate(\"+p+\",\"+p+\")\");\n\n    let row = svg.selectAll(\".row\")\n        .data(board)\n        .enter().append(\"g\")\n        .attr(\"class\", \"row\");\n\n    row.selectAll(\".square\")\n        .data((d) => d)\n        .enter().append(\"rect\")\n        .attr(\"class\",\"board\")\n        .attr(\"x\", (d) => d.x )\n        .attr(\"y\", (d) => d.y )\n        .attr(\"width\", s )\n        .attr(\"height\", s )\n        .attr(\"rx\", s/config.size)\n        .attr(\"ry\", s/config.size)\n        .style(\"fill\", \"#fff\")\n        .style(\"stroke\", \"#a2a2a2\");\n\n    drawStone();\n    \n}\n\nconst Board = ({config, points, handleChange}) => {\n    const classes = useStyles();\n    const widgetRef = useRef(null);\n\n    const handleGameChange = (key, value) => {\n        handleChange(key, value);\n    }\n\n    useLayoutEffect(() => {\n        if (points > 0){ return; }\n        draw(widgetRef.current, config, handleGameChange);\n    });\n\n    return <Box className={classes.board} ref={widgetRef}></Box>\n\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}