{"ast":null,"code":"var _jsxFileName = \"/Users/peterbak/Documents/GitHub/game1010/game1010/src/widgets/Board.js\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@material-ui/core';\nimport React, { useRef, useLayoutEffect } from 'react';\nimport useStyles from '../style';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst draw = div => {\n  const config = {\n    size: 20,\n    grid: 10,\n    padding: 3\n  };\n  let s = config.size,\n      width = config.grid * s,\n      height = width;\n  d3.select(div).selectAll('*').remove();\n  const svg = d3.select(div).append(\"svg\").attr(\"width\", width + config.padding * 2).attr(\"height\", height + config.padding * 2).append(\"g\").attr(\"transform\", \"translate(\" + config.padding + \",\" + config.padding + \")\");\n  const board = d3.range(config.grid).map((r, i) => d3.range(config.grid).map((c, j) => ({\n    x: c * s,\n    y: i * s\n  })));\n  debugger;\n  let row = svg.selectAll(\".row\").data(board).enter().append(\"g\").attr(\"class\", \"row\");\n  let column = row.selectAll(\".square\").data(d => d).enter().append(\"rect\").attr(\"class\", \"square\").attr(\"x\", d => d.x).attr(\"y\", d => d.y).attr(\"width\", s).attr(\"height\", s).attr(\"border-radius\", s / 10).style(\"fill\", \"#fff\").style(\"stroke\", \"#222\");\n  debugger;\n};\n\nconst Board = () => {\n  _s();\n\n  const classes = useStyles();\n  const widgetRef = useRef(null);\n  useLayoutEffect(() => {\n    draw(widgetRef.current);\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.board,\n    ref: widgetRef,\n    children: \"Board\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Board, \"cFDRHWlqjeUjP2b8ZEl5Vn6bhi8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/peterbak/Documents/GitHub/game1010/game1010/src/widgets/Board.js"],"names":["Box","React","useRef","useLayoutEffect","useStyles","d3","draw","div","config","size","grid","padding","s","width","height","select","selectAll","remove","svg","append","attr","board","range","map","r","i","c","j","x","y","row","data","enter","column","d","style","Board","classes","widgetRef","current"],"mappings":"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","sourcesContent":["import { Box } from '@material-ui/core'\nimport React, {useRef, useLayoutEffect} from 'react'\n\nimport useStyles from '../style';\nimport * as d3 from 'd3';\n\nconst draw = (div) => {\n    const config = {\n        size: 20,\n        grid: 10,\n        padding: 3,\n    }\n\n    let s = config.size, width = config.grid * s, height = width;\n\n    d3.select(div).selectAll('*').remove();\n\n    const svg = d3.select(div).append(\"svg\")\n        .attr(\"width\", width + config.padding * 2)\n        .attr(\"height\", height + config.padding * 2)\n        .append(\"g\")\n        .attr(\"transform\",\"translate(\"+config.padding+\",\"+config.padding+\")\");\n    \n    const board = d3.range(config.grid).map((r, i) => \n        d3.range(config.grid).map((c, j) => \n            ({x: c * s, y: i * s})));\n\n    debugger;\n\n    let row = svg.selectAll(\".row\")\n        .data(board)\n        .enter().append(\"g\")\n        .attr(\"class\", \"row\");\n\n    let column = row.selectAll(\".square\")\n        .data((d) => d)\n        .enter().append(\"rect\")\n        .attr(\"class\",\"square\")\n        .attr(\"x\", (d) => d.x )\n        .attr(\"y\", (d) => d.y )\n        .attr(\"width\", s )\n        .attr(\"height\", s )\n        .attr(\"border-radius\", s/10)\n        .style(\"fill\", \"#fff\")\n        .style(\"stroke\", \"#222\");\n\n    debugger;\n    \n\n\n}\n\nconst Board = () => {\n    const classes = useStyles();\n    const widgetRef = useRef(null);\n\n    useLayoutEffect(() => {\n        \n        draw(widgetRef.current);\n        \n    });\n\n    return <Box className={classes.board} ref={widgetRef}>\n        Board\n    </Box>\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}