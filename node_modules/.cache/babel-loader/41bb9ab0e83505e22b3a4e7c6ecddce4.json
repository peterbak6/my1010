{"ast":null,"code":"var _jsxFileName = \"/Users/peterbak/Documents/GitHub/game1010/game1010/src/widgets/Board.js\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@material-ui/core';\nimport React, { useRef, useLayoutEffect } from 'react';\nimport useStyles from '../style';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst draw = div => {\n  const config = {\n    size: 40,\n    grid: 10,\n    padding: 2\n  };\n  let s = config.size,\n      p = config.padding,\n      width = config.grid * (s + p),\n      height = width;\n\n  function dragstarted() {\n    d3.select(this).attr(\"stroke\", \"black\");\n  }\n\n  function dragged(event, d) {\n    d3.select(this).raise().attr(\"cx\", d.x = event.x).attr(\"cy\", d.y = event.y);\n  }\n\n  function dragended() {\n    d3.select(this).attr(\"stroke\", null);\n  }\n\n  const drag = d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended);\n  d3.select(div).selectAll('*').remove();\n  const svg = d3.select(div).append(\"svg\").attr(\"width\", width + p * 2).attr(\"height\", (height + p) * 2).append(\"g\").attr(\"transform\", \"translate(\" + p + \",\" + p + \")\");\n  const board = d3.range(config.grid).map((r, i) => d3.range(config.grid).map((c, j) => ({\n    x: c * (s + p),\n    y: i * (s + p),\n    free: true\n  })));\n  let row = svg.selectAll(\".row\").data(board).enter().append(\"g\").attr(\"class\", \"row\");\n  let column = row.selectAll(\".square\").data(d => d).enter().append(\"rect\").attr(\"class\", \"square\").attr(\"x\", d => d.x).attr(\"y\", d => d.y).attr(\"width\", s).attr(\"height\", s).attr(\"rx\", s / 10).attr(\"ry\", s / 10).style(\"fill\", \"#fff\").style(\"stroke\", \"#444\");\n  let target = svg.append(\"rect\").attr(\"class\", \"target\").attr(\"x\", (width - s) / 2).attr(\"y\", height + s * 2).attr(\"width\", s).attr(\"height\", s).attr(\"rx\", s / 10).attr(\"ry\", s / 10).style(\"fill\", \"#ff7f00\").style(\"stroke\", \"#000\").call(drag);\n};\n\nconst Board = () => {\n  _s();\n\n  const classes = useStyles();\n  const widgetRef = useRef(null);\n  useLayoutEffect(() => {\n    draw(widgetRef.current);\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.board,\n    ref: widgetRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Board, \"cFDRHWlqjeUjP2b8ZEl5Vn6bhi8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/peterbak/Documents/GitHub/game1010/game1010/src/widgets/Board.js"],"names":["Box","React","useRef","useLayoutEffect","useStyles","d3","draw","div","config","size","grid","padding","s","p","width","height","dragstarted","select","attr","dragged","event","d","raise","x","y","dragended","drag","on","selectAll","remove","svg","append","board","range","map","r","i","c","j","free","row","data","enter","column","style","target","call","Board","classes","widgetRef","current"],"mappings":"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","sourcesContent":["import { Box } from '@material-ui/core'\nimport React, {useRef, useLayoutEffect} from 'react'\n\nimport useStyles from '../style';\nimport * as d3 from 'd3';\n\nconst draw = (div) => {\n    const config = {\n        size: 40,\n        grid: 10,\n        padding: 2,\n    }\n\n    let s = config.size, p=config.padding, width = config.grid * (s + p), height = width;\n\n    function dragstarted() {\n        d3.select(this).attr(\"stroke\", \"black\");\n    }\n    \n    function dragged(event, d) {\n        d3.select(this).raise().attr(\"cx\", d.x = event.x).attr(\"cy\", d.y = event.y);\n    }\n    \n    function dragended() {\n        d3.select(this).attr(\"stroke\", null);\n    }\n    \n    const drag = d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended);\n\n    d3.select(div).selectAll('*').remove();\n\n    const svg = d3.select(div).append(\"svg\")\n        .attr(\"width\", width + p * 2)\n        .attr(\"height\", (height + p) * 2)\n        .append(\"g\")\n        .attr(\"transform\",\"translate(\"+p+\",\"+p+\")\");\n    \n    const board = d3.range(config.grid).map((r, i) => \n        d3.range(config.grid).map((c, j) => \n            ({\n                x: c * (s + p), \n                y: i * (s + p), \n                free: true \n            })));\n\n    let row = svg.selectAll(\".row\")\n        .data(board)\n        .enter().append(\"g\")\n        .attr(\"class\", \"row\");\n\n    let column = row.selectAll(\".square\")\n        .data((d) => d)\n        .enter().append(\"rect\")\n        .attr(\"class\",\"square\")\n        .attr(\"x\", (d) => d.x )\n        .attr(\"y\", (d) => d.y )\n        .attr(\"width\", s )\n        .attr(\"height\", s )\n        .attr(\"rx\", s/10)\n        .attr(\"ry\", s/10)\n        .style(\"fill\", \"#fff\")\n        .style(\"stroke\", \"#444\");\n    \n    let target = svg.append(\"rect\")\n        .attr(\"class\",\"target\")\n        .attr(\"x\", (width - s) / 2 )\n        .attr(\"y\", height + s * 2 )\n        .attr(\"width\", s )\n        .attr(\"height\", s )\n        .attr(\"rx\", s/10)\n        .attr(\"ry\", s/10)\n        .style(\"fill\", \"#ff7f00\")\n        .style(\"stroke\", \"#000\")\n        .call(drag);\n\n\n}\n\nconst Board = () => {\n    const classes = useStyles();\n    const widgetRef = useRef(null);\n\n    useLayoutEffect(() => {\n        \n        draw(widgetRef.current);\n        \n    });\n\n    return <Box className={classes.board} ref={widgetRef}>\n        \n    </Box>\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}