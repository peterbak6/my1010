{"ast":null,"code":"var _jsxFileName = \"/Users/peterbak/Documents/GitHub/game1010/game1010/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Box, Button } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\nimport useStyles from './style';\nimport Board from './widgets/Board';\nimport { useState, useCallback } from 'react';\nimport { Refresh } from './widgets/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [user, setUser] = useState('');\n  const [userOptions, setUserOptions] = useState(['']);\n  const [points, setPoints] = useState(0);\n  const [maxPoints, setMaxPoints] = useState(0);\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n\n    let my1010UserPoints = JSON.parse(localStorage.getItem(\"my1010\") || \"{}\");\n\n    if (my1010UserPoints[user] === undefined) {\n      my1010UserPoints[user] = {\n        'points': 0,\n        'max': 0\n      };\n    }\n\n    my1010UserPoints[user][\"points\"] = points;\n    my1010UserPoints[user][\"max\"] = maxPoints;\n    localStorage.setItem(\"my1010\", JSON.stringify(my1010UserPoints));\n  }, [points, maxPoints]);\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n\n    let my1010UserPoints = JSON.parse(localStorage.getItem(\"my1010\") || \"{}\");\n\n    if (my1010UserPoints[user] === undefined) {\n      my1010UserPoints[user] = {\n        'points': 0,\n        'max': 0\n      };\n    }\n\n    setPoints(my1010UserPoints[user]['points']);\n    setMaxPoints(my1010UserPoints[user]['max']);\n    setUserOptions(Object.keys(my1010UserPoints));\n  }, [user]);\n  const handleChange = useCallback((key, value) => {\n    if (value === 0 || key !== 'points') {\n      return;\n    }\n\n    setPoints(p => +p + value);\n    setMaxPoints(mP => Math.max(mP, +mP + value));\n  }, []);\n\n  const onHandleRefresh = () => {\n    setPoints(0);\n  };\n\n  const config = {\n    size: 40,\n    grid: 10,\n    padding: 2,\n    stones: 3,\n    colors: [\"#8dd3c7\", \"#ffffb3\", \"#bebada\", \"#fb8072\", \"#80b1d3\", \"#fdb462\", \"#b3de69\", \"#fccde5\", \"#d9d9d9\", \"#bc80bd\", \"#ccebc5\", \"#ffed6f\"],\n    colors1: [\"#66c2a5\", \"#fc8d62\", \"#8da0cb\", \"#e78ac3\", \"#a6d854\", \"#ffd92f\", \"#e5c494\", \"#b3b3b3\"]\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: classes.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.h2,\n        children: \"My 1010\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        value: user,\n        onChange: (event, newValue) => {\n          if (newValue && newValue.inputValue) {\n            // Create a new value from the user input\n            setUser(newValue.inputValue);\n          } else {\n            setUser(newValue);\n          }\n        },\n        selectOnFocus: true,\n        clearOnBlur: true,\n        handleHomeEndKeys: true,\n        options: userOptions,\n        getOptionLabel: option => {\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n\n          return option;\n        },\n        renderOption: option => option,\n        style: {\n          width: 120\n        },\n        freeSolo: true,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          placeholder: \"user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.h3,\n        children: [\": \", points, \" (\", maxPoints, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.refresh,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onHandleRefresh,\n          children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      config: config,\n      points: points,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/x26Zd/eiERlJl34RVtgAcrz2WA=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/peterbak/Documents/GitHub/game1010/game1010/src/App.js"],"names":["Box","Button","React","useEffect","Autocomplete","TextField","useStyles","Board","useState","useCallback","Refresh","App","classes","user","setUser","userOptions","setUserOptions","points","setPoints","maxPoints","setMaxPoints","my1010UserPoints","JSON","parse","localStorage","getItem","undefined","setItem","stringify","Object","keys","handleChange","key","value","p","mP","Math","max","onHandleRefresh","config","size","grid","padding","stones","colors","colors1","root","header","h2","event","newValue","inputValue","option","width","params","h3","refresh"],"mappings":"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","sourcesContent":["import './App.css';\nimport {Box, Button} from '@material-ui/core'\nimport React, { useEffect } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\n\nimport useStyles from './style';\nimport Board from './widgets/Board'\nimport { useState , useCallback} from 'react';\nimport {Refresh} from './widgets/utils';\n\nfunction App() {\n  const classes = useStyles();\n  const [user, setUser] = useState('')\n  const [userOptions, setUserOptions]  = useState([''])\n  const [points, setPoints] = useState(0);\n  const [maxPoints, setMaxPoints] = useState(0)\n  \n  useEffect(()=>{\n    if (!user){ return; }\n    let my1010UserPoints = JSON.parse(localStorage.getItem(\"my1010\") || \"{}\"); \n    if (my1010UserPoints[user]===undefined){\n      my1010UserPoints[user] = {'points':0, 'max':0}\n    }\n    my1010UserPoints[user][\"points\"] = points;\n    my1010UserPoints[user][\"max\"] = maxPoints;\n    localStorage.setItem(\"my1010\",JSON.stringify(my1010UserPoints));\n  }, [points, maxPoints]);\n\n  useEffect(()=>{\n    if (!user){ return; }\n    let my1010UserPoints = JSON.parse(localStorage.getItem(\"my1010\") || \"{}\"); \n    if (my1010UserPoints[user]===undefined){\n      my1010UserPoints[user] = {'points':0, 'max':0}\n    }\n    setPoints(my1010UserPoints[user]['points'])\n    setMaxPoints(my1010UserPoints[user]['max'])\n    setUserOptions(Object.keys(my1010UserPoints))\n  }, [user]);\n\n  const handleChange = useCallback((key, value) => {\n    if (value===0 || key!=='points'){ return; }\n    setPoints(p => +p+value);\n    setMaxPoints(mP => Math.max(mP, +mP+value));\n  },[]);\n\n  const onHandleRefresh = () => {\n    setPoints(0)\n  }\n\n  const config = {\n    size: 40,\n    grid: 10,\n    padding: 2,\n    stones: 3,\n    colors: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"],\n    colors1: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]\n  }\n\n  return (\n    <Box className={classes.root}>\n      <header className={classes.header}>\n        <h2 className={classes.h2}>\n          My 1010\n        </h2>\n        <Autocomplete\n          value={user}\n          onChange={(event, newValue) => {\n            if (newValue && newValue.inputValue) {\n              // Create a new value from the user input\n              setUser(newValue.inputValue);\n            } else {\n              setUser(newValue);\n            }\n          }}\n          selectOnFocus\n          clearOnBlur\n          handleHomeEndKeys\n          options={userOptions}\n          getOptionLabel={(option) => {\n            if (option.inputValue) {\n              return option.inputValue;\n            }\n            return option;\n          }}\n          renderOption={(option) => option}\n          style={{ width: 120 }}\n          freeSolo\n          renderInput={(params) => (\n            <TextField {...params} placeholder='user'/>\n          )}\n        />\n        <h3 className={classes.h3}>: {points} ({maxPoints})</h3>\n        <Box className={classes.refresh}>\n          <Button onClick={onHandleRefresh}><Refresh/></Button>\n      </Box>\n      </header>\n      <Board config={config} points={points} handleChange={handleChange}/>\n    </Box>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}