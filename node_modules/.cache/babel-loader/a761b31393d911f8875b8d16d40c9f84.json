{"ast":null,"code":"import _objectSpread from\"/Users/peterbak/Documents/game1010/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/peterbak/Documents/game1010/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import{Box,Button}from'@material-ui/core';import React,{useEffect}from'react';import Autocomplete from'@material-ui/lab/Autocomplete';import{TextField}from'@material-ui/core';import useStyles from'./style';import Board from'./widgets/Board';import{useState,useCallback}from'react';import{Refresh}from'./widgets/utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var classes=useStyles();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(Object.keys(JSON.parse(localStorage.getItem(\"my1010\")||\"{}\"))),_useState4=_slicedToArray(_useState3,2),userOptions=_useState4[0],setUserOptions=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),points=_useState6[0],setPoints=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),maxPoints=_useState8[0],setMaxPoints=_useState8[1];useEffect(function(){if(!user){return;}var my1010UserPoints=JSON.parse(localStorage.getItem(\"my1010\")||\"{}\");if(my1010UserPoints[user]===undefined){my1010UserPoints[user]=0;}my1010UserPoints[user]=Math.max(maxPoints,points);setMaxPoints(my1010UserPoints[user]);localStorage.setItem(\"my1010\",JSON.stringify(my1010UserPoints));},[points]);useEffect(function(){if(!user){return;}var my1010UserPoints=JSON.parse(localStorage.getItem(\"my1010\")||\"{}\");if(my1010UserPoints[user]===undefined){my1010UserPoints[user]=0;}setPoints(0);setMaxPoints(my1010UserPoints[user]);setUserOptions(Object.keys(my1010UserPoints));},[user]);var handleChange=useCallback(function(key,value){if(value===0||key!=='points'){return;}setPoints(function(p){return+p+value;});},[]);var onHandleRefresh=function onHandleRefresh(){setPoints(0);};var config={size:40,grid:10,padding:2,stones:3,colors:[\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"],colors1:[\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]};return/*#__PURE__*/_jsxs(Box,{className:classes.root,children:[/*#__PURE__*/_jsxs(\"header\",{className:classes.header,children:[/*#__PURE__*/_jsx(\"h2\",{className:classes.h2,children:\"My 1010\"}),/*#__PURE__*/_jsx(Autocomplete,{value:user,onChange:function onChange(event,newValue){if(newValue&&newValue.inputValue){// Create a new value from the user input\nsetUser(newValue.inputValue);}else{setUser(newValue);}},selectOnFocus:true,clearOnBlur:true,handleHomeEndKeys:true,options:userOptions,getOptionLabel:function getOptionLabel(option){if(option.inputValue){return option.inputValue;}return option;},renderOption:function renderOption(option){return option;},style:{width:120},freeSolo:true,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{placeholder:\"user\"}));}}),/*#__PURE__*/_jsxs(\"h3\",{className:classes.h3,children:[\": \",points,\" (\",maxPoints,\")\"]}),/*#__PURE__*/_jsx(Box,{className:classes.refresh,children:/*#__PURE__*/_jsx(Button,{onClick:onHandleRefresh,children:/*#__PURE__*/_jsx(Refresh,{})})})]}),/*#__PURE__*/_jsx(Board,{config:config,points:points,handleChange:handleChange})]});}export default App;","map":{"version":3,"sources":["/Users/peterbak/Documents/game1010/src/App.js"],"names":["Box","Button","React","useEffect","Autocomplete","TextField","useStyles","Board","useState","useCallback","Refresh","App","classes","user","setUser","Object","keys","JSON","parse","localStorage","getItem","userOptions","setUserOptions","points","setPoints","maxPoints","setMaxPoints","my1010UserPoints","undefined","Math","max","setItem","stringify","handleChange","key","value","p","onHandleRefresh","config","size","grid","padding","stones","colors","colors1","root","header","h2","event","newValue","inputValue","option","width","params","h3","refresh"],"mappings":"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","sourcesContent":["import './App.css';\nimport {Box, Button} from '@material-ui/core'\nimport React, { useEffect } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\n\nimport useStyles from './style';\nimport Board from './widgets/Board'\nimport { useState , useCallback} from 'react';\nimport {Refresh} from './widgets/utils';\n\nfunction App() {\n  const classes = useStyles();\n  const [user, setUser] = useState('')\n  const [userOptions, setUserOptions]  = useState(Object.keys(JSON.parse(localStorage.getItem(\"my1010\") || \"{}\")))\n  const [points, setPoints] = useState(0);\n  const [maxPoints, setMaxPoints] = useState(0)\n  \n  useEffect(()=>{\n    if (!user){ return; }\n    let my1010UserPoints = JSON.parse(localStorage.getItem(\"my1010\") || \"{}\"); \n    if (my1010UserPoints[user]===undefined){\n      my1010UserPoints[user] = 0\n    }\n    my1010UserPoints[user] = Math.max(maxPoints, points);\n    setMaxPoints(my1010UserPoints[user]);\n    localStorage.setItem(\"my1010\",JSON.stringify(my1010UserPoints));\n  }, [points]);\n\n  useEffect(()=>{\n    if (!user){ return; }\n    let my1010UserPoints = JSON.parse(localStorage.getItem(\"my1010\") || \"{}\"); \n    if (my1010UserPoints[user]===undefined){\n      my1010UserPoints[user] = 0\n    }\n    setPoints(0)\n    setMaxPoints(my1010UserPoints[user])\n    setUserOptions(Object.keys(my1010UserPoints))\n  }, [user]);\n\n  const handleChange = useCallback((key, value) => {\n    if (value===0 || key!=='points'){ return; }\n    setPoints(p => +p+value);\n  },[]);\n\n  const onHandleRefresh = () => {\n    setPoints(0)\n  }\n\n  const config = {\n    size: 40,\n    grid: 10,\n    padding: 2,\n    stones: 3,\n    colors: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"],\n    colors1: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]\n  }\n\n  return (\n    <Box className={classes.root}>\n      <header className={classes.header}>\n        <h2 className={classes.h2}>\n          My 1010\n        </h2>\n        <Autocomplete\n          value={user}\n          onChange={(event, newValue) => {\n            if (newValue && newValue.inputValue) {\n              // Create a new value from the user input\n              setUser(newValue.inputValue);\n            } else {\n              setUser(newValue);\n            }\n          }}\n          selectOnFocus\n          clearOnBlur\n          handleHomeEndKeys\n          options={userOptions}\n          getOptionLabel={(option) => {\n            if (option.inputValue) {\n              return option.inputValue;\n            }\n            return option;\n          }}\n          renderOption={(option) => option}\n          style={{ width: 120 }}\n          freeSolo\n          renderInput={(params) => (\n            <TextField {...params} placeholder='user'/>\n          )}\n        />\n        <h3 className={classes.h3}>: {points} ({maxPoints})</h3>\n        <Box className={classes.refresh}>\n          <Button onClick={onHandleRefresh}><Refresh/></Button>\n      </Box>\n      </header>\n      <Board config={config} points={points} handleChange={handleChange}/>\n    </Box>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}