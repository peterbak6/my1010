{"ast":null,"code":"var _jsxFileName = \"/Users/peterbak/Documents/GitHub/game1010/game1010/src/widgets/Board.js\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@material-ui/core';\nimport React, { useRef, useLayoutEffect } from 'react';\nimport useStyles from '../style';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst draw = div => {\n  const config = {\n    size: 20,\n    grid: 10,\n    padding: 3\n  };\n  let width = config.grid * config.size,\n      height = width;\n  const svg = d3.select(div).append(\"svg\").attr(\"width\", width + config.padding * 2).attr(\"height\", height + config.padding * 2).append(\"g\").attr(\"transform\", \"translate(\" + config.padding + \",\" + config.padding + \")\");\n  const board = d3.range(config.grid).map(r => d3.range(config.grid));\n  svg.selectAll(\"rect\").data(board).enter().append(\"g\").selectAll(\"rect\").data(b => b).enter().append(\"rect\").attr(\"x\", function (d, i) {\n    return i * 20;\n  }).attr(\"y\", function (d, i, j) {\n    return j * 20;\n  }).attr(\"width\", config.size).attr(\"height\", config.size) // .attr(\"transform\", (c, i, j) => 'translate('+(i*config.size)+','+(j*config.size)+')')\n  .attr(\"fill\", \"#fff\");\n  debugger;\n};\n\nconst Board = () => {\n  _s();\n\n  const classes = useStyles();\n  const widgetRef = useRef(null);\n  useLayoutEffect(() => {\n    draw(widgetRef.current);\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.board,\n    ref: widgetRef,\n    children: \"Board\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Board, \"cFDRHWlqjeUjP2b8ZEl5Vn6bhi8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/peterbak/Documents/GitHub/game1010/game1010/src/widgets/Board.js"],"names":["Box","React","useRef","useLayoutEffect","useStyles","d3","draw","div","config","size","grid","padding","width","height","svg","select","append","attr","board","range","map","r","selectAll","data","enter","b","d","i","j","Board","classes","widgetRef","current"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,OAAOC,KAAP,IAAeC,MAAf,EAAuBC,eAAvB,QAA6C,OAA7C;AAEA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,MAAMC,IAAI,GAAIC,GAAD,IAAS;AAClB,QAAMC,MAAM,GAAG;AACXC,IAAAA,IAAI,EAAE,EADK;AAEXC,IAAAA,IAAI,EAAE,EAFK;AAGXC,IAAAA,OAAO,EAAE;AAHE,GAAf;AAMA,MAAIC,KAAK,GAAGJ,MAAM,CAACE,IAAP,GAAcF,MAAM,CAACC,IAAjC;AAAA,MAAuCI,MAAM,GAAGD,KAAhD;AACA,QAAME,GAAG,GAAGT,EAAE,CAACU,MAAH,CAAUR,GAAV,EAAeS,MAAf,CAAsB,KAAtB,EACPC,IADO,CACF,OADE,EACOL,KAAK,GAAGJ,MAAM,CAACG,OAAP,GAAiB,CADhC,EAEPM,IAFO,CAEF,QAFE,EAEQJ,MAAM,GAAGL,MAAM,CAACG,OAAP,GAAiB,CAFlC,EAGPK,MAHO,CAGA,GAHA,EAIPC,IAJO,CAIF,WAJE,EAIU,eAAaT,MAAM,CAACG,OAApB,GAA4B,GAA5B,GAAgCH,MAAM,CAACG,OAAvC,GAA+C,GAJzD,CAAZ;AAMA,QAAMO,KAAK,GAAGb,EAAE,CAACc,KAAH,CAASX,MAAM,CAACE,IAAhB,EAAsBU,GAAtB,CAA0BC,CAAC,IAAIhB,EAAE,CAACc,KAAH,CAASX,MAAM,CAACE,IAAhB,CAA/B,CAAd;AAEAI,EAAAA,GAAG,CAACQ,SAAJ,CAAc,MAAd,EACKC,IADL,CACUL,KADV,EAEKM,KAFL,GAGKR,MAHL,CAGY,GAHZ,EAIKM,SAJL,CAIe,MAJf,EAKKC,IALL,CAKUE,CAAC,IAAIA,CALf,EAKkBD,KALlB,GAMKR,MANL,CAMY,MANZ,EAOKC,IAPL,CAOU,GAPV,EAOe,UAASS,CAAT,EAAWC,CAAX,EAAa;AACZ,WAAOA,CAAC,GAAC,EAAT;AACX,GATL,EAUKV,IAVL,CAUU,GAVV,EAUe,UAASS,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAiB;AAChB,WAAOA,CAAC,GAAC,EAAT;AACX,GAZL,EAaKX,IAbL,CAaU,OAbV,EAamBT,MAAM,CAACC,IAb1B,EAcKQ,IAdL,CAcU,QAdV,EAcoBT,MAAM,CAACC,IAd3B,EAeI;AAfJ,GAgBKQ,IAhBL,CAgBU,MAhBV,EAgBkB,MAhBlB;AAiBA;AAIH,CArCD;;AAuCA,MAAMY,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,OAAO,GAAG1B,SAAS,EAAzB;AACA,QAAM2B,SAAS,GAAG7B,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,eAAe,CAAC,MAAM;AAElBG,IAAAA,IAAI,CAACyB,SAAS,CAACC,OAAX,CAAJ;AAEH,GAJc,CAAf;AAMA,sBAAO,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACZ,KAAxB;AAA+B,IAAA,GAAG,EAAEa,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAbD;;GAAMF,K;UACczB,S;;;KADdyB,K;AAeN,eAAeA,KAAf","sourcesContent":["import { Box } from '@material-ui/core'\nimport React, {useRef, useLayoutEffect} from 'react'\n\nimport useStyles from '../style';\nimport * as d3 from 'd3';\n\nconst draw = (div) => {\n    const config = {\n        size: 20,\n        grid: 10,\n        padding: 3,\n    }\n\n    let width = config.grid * config.size, height = width;\n    const svg = d3.select(div).append(\"svg\")\n        .attr(\"width\", width + config.padding * 2)\n        .attr(\"height\", height + config.padding * 2)\n        .append(\"g\")\n        .attr(\"transform\",\"translate(\"+config.padding+\",\"+config.padding+\")\");\n    \n    const board = d3.range(config.grid).map(r => d3.range(config.grid));\n\n    svg.selectAll(\"rect\")\n        .data(board)\n        .enter()\n        .append(\"g\")\n        .selectAll(\"rect\")\n        .data(b => b).enter()\n        .append(\"rect\")\n        .attr(\"x\", function(d,i){\n                    return i*20;\n        })\n        .attr(\"y\", function(d, i, j){\n                    return j*20;\n        })\n        .attr(\"width\", config.size)\n        .attr(\"height\", config.size)\n        // .attr(\"transform\", (c, i, j) => 'translate('+(i*config.size)+','+(j*config.size)+')')\n        .attr(\"fill\", \"#fff\")\n    debugger;\n    \n\n\n}\n\nconst Board = () => {\n    const classes = useStyles();\n    const widgetRef = useRef(null);\n\n    useLayoutEffect(() => {\n        \n        draw(widgetRef.current);\n        \n    });\n\n    return <Box className={classes.board} ref={widgetRef}>\n        Board\n    </Box>\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}