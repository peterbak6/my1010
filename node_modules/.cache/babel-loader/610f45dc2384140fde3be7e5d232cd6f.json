{"ast":null,"code":"import * as d3 from 'd3';\nexport const Stones = [{\n  stone: [[0, 0]],\n  type: 0\n}, {\n  stone: [[0, 0], [0, 1]],\n  type: 1\n}, {\n  stone: [[0, 0], [1, 0]],\n  type: 1\n}, {\n  stone: [[0, 0], [0, 1], [0, 2]],\n  type: 2\n}, {\n  stone: [[0, 0], [1, 0], [2, 0]],\n  type: 2\n}, {\n  stone: [[0, 0], [1, 0], [1, 1]],\n  type: 0\n}, {\n  stone: [[0, 0], [1, 0], [0, 1]],\n  type: 3\n}, {\n  stone: [[0, 0], [0, 1], [1, 1]],\n  type: 3\n}, {\n  stone: [[1, 0], [1, 1], [0, 1]],\n  type: 3\n}, {\n  stone: [[0, 0], [0, 1], [0, 2], [0, 3]],\n  type: 4\n}, {\n  stone: [[0, 0], [1, 0], [2, 0], [3, 0]],\n  type: 4\n}, {\n  stone: [[0, 0], [0, 1], [1, 0], [1, 1]],\n  type: 4\n}, {\n  stone: [[0, 0], [0, 1], [0, 2], [1, 2]],\n  type: 5\n}, {\n  stone: [[1, 0], [1, 1], [1, 2], [0, 2]],\n  type: 5\n}, {\n  stone: [[0, 0], [1, 0], [0, 1], [2, 0]],\n  type: 5\n}, {\n  stone: [[0, 0], [1, 0], [2, 0], [2, 1]],\n  type: 5\n}, {\n  stone: [[1, 0], [1, 1], [1, 2], [0, 1]],\n  type: 6\n}, {\n  stone: [[0, 0], [0, 1], [0, 2], [1, 1]],\n  type: 6\n}, {\n  stone: [[1, 0], [0, 1], [1, 1], [2, 1]],\n  type: 6\n}, {\n  stone: [[0, 0], [1, 0], [2, 0], [1, 1]],\n  type: 6\n}, {\n  stone: [[0, 1], [1, 0], [1, 1], [2, 0]],\n  type: 7\n}, {\n  stone: [[0, 0], [1, 0], [1, 1], [2, 1]],\n  type: 7\n}, {\n  stone: [[0, 0], [1, 0], [2, 0], [0, 1], [1, 1], [2, 1], [0, 2], [1, 2], [2, 2]],\n  type: 0\n}];\nexport const generateStones = N => {\n  let stn = d3.range(N).map(n => {\n    return Math.floor(Math.random() * Stones.length);\n  });\n  return stn.map(s => Stones[s]);\n};","map":{"version":3,"sources":["/Users/peterbak/Documents/GitHub/game1010/game1010/src/widgets/Stones.js"],"names":["d3","Stones","stone","type","generateStones","N","stn","range","map","n","Math","floor","random","length","s"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\n\nexport const Stones = [\n    {stone:[[0,0]], type:0},\n\n    {stone:[[0,0],[0,1]], type:1}, \n    {stone:[[0,0],[1,0]], type:1},\n\n    {stone:[[0,0],[0,1],[0,2]], type:2},\n    {stone:[[0,0],[1,0],[2,0]], type:2},\n    {stone:[[0,0],[1,0],[1,1]], type:0},\n    {stone:[[0,0],[1,0],[0,1]], type:3},\n    {stone:[[0,0],[0,1],[1,1]], type:3},\n    {stone:[[1,0],[1,1],[0,1]], type:3},\n\n    {stone:[[0,0],[0,1],[0,2],[0,3]], type:4},\n    {stone:[[0,0],[1,0],[2,0],[3,0]], type:4},\n    {stone:[[0,0],[0,1],[1,0],[1,1]], type:4},\n    {stone:[[0,0],[0,1],[0,2],[1,2]], type:5},\n    {stone:[[1,0],[1,1],[1,2],[0,2]], type:5},\n    {stone:[[0,0],[1,0],[0,1],[2,0]], type:5},\n    {stone:[[0,0],[1,0],[2,0],[2,1]], type:5},\n    \n    {stone:[[1,0],[1,1],[1,2],[0,1]], type:6},\n    {stone:[[0,0],[0,1],[0,2],[1,1]], type:6},\n    {stone:[[1,0],[0,1],[1,1],[2,1]], type:6},\n    {stone:[[0,0],[1,0],[2,0],[1,1]], type:6},\n\n    {stone:[[0,1],[1,0],[1,1],[2,0]], type:7},\n    {stone:[[0,0],[1,0],[1,1],[2,1]], type:7},\n\n    {stone:[[0,0],[1,0],[2,0],[0,1],[1,1],[2,1],[0,2],[1,2],[2,2]], type:0}\n]\n\nexport const generateStones = (N) => {\n    let stn = d3.range(N).map(n => {\n        return Math.floor(Math.random() * Stones.length)\n    })\n    return stn.map(s => Stones[s])\n}"]},"metadata":{},"sourceType":"module"}